package Dist::Zilla::Plugin::Test::ProveDeps;

# AUTHORITY
# DATE
# DIST
# VERSION

use Moose;
with 'Dist::Zilla::Role::FileGatherer';
with 'Dist::Zilla::Role::PrereqSource';
with 'Dist::Zilla::Role::FileFinderUser' => {
    default_finders => [':InstallModules'],
};

use Data::Dmp;
use namespace::autoclean;

# Register the release test prereq as a "develop requires"
# so it will be listed in "dzil listdeps --author"
sub register_prereqs {
    my ($self) = @_;

    $self->zilla->register_prereqs(
        {
            type  => 'requires',
            phase => 'develop',
        },
        'App::ProveDeps' => '0.004',
    );
}

sub gather_files {
    my ($self) = @_;

    my @modules;
    for (@{ $self->found_files }) {
        next unless $_->name =~ m!\Alib/(.+)\.pm\z!;
        my $pkg = $1; $pkg =~ s!/!::!g;
        push @modules, $pkg;
    }

    my $filename = "xt/release/prove-deps.t";
    my $filecontent = q|
#!perl

# This file was automatically generated by Dist::Zilla::Plugin::Test::ProveDeps.

use Test::More;
use Cwd;

eval "use Test::ProveDeps 0.001";
plan skip_all => "Test::ProveDeps 0.001 required for testing dependent distributions"
  if $@;

all_dependents_ok(
    modules => | . dmp(\@modules) . q|,
    prove_opts => ['-l', "-I".getcwd()."/lib"],
);
|;

    $self->log(["Adding %s ...", $filename]);
    require Dist::Zilla::File::InMemory;
    $self->add_file(
        Dist::Zilla::File::InMemory->new({
            name => $filename,
            content => $filecontent,
        })
      );
}

__PACKAGE__->meta->make_immutable;
1;
# ABSTRACT: Add release test to run 'prove' on dependent distributions

=for Pod::Coverage .+

=head1 DESCRIPTION

EXPERIMENTAL.

This plugin adds the following files:

  xt/release/prove-deps.t

This test script uses L<Test::ProveDeps> to check your dependent distributions.
